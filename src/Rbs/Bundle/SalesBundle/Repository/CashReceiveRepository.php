<?php

namespace Rbs\Bundle\SalesBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * CashReceiveRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CashReceiveRepository extends EntityRepository
{
    public function getAll()
    {
        return $this->findAll();
    }

    public function create($data)
    {
        $this->_em->persist($data);
        $this->_em->flush();
    }

    public function delete($data)
    {
        $this->_em->remove($data);
        $this->_em->flush();
    }

    public function update($data)
    {
        $this->_em->persist($data);
        $this->_em->flush();
        return $this->_em;
    }

    public function getLastCashReceivedId($user)
    {
        $query = $this->createQueryBuilder('cr');
        $query->join('cr.depo', 'd');
        $query->join('d.users', 'u');
        $query->select('cr.id');
        $query->andWhere('u.id = :user');
        $query->setParameter('user', $user);
        $query->orderBy('cr.receivedAt', 'desc');
        $query->setMaxResults(1);

        return $query->getQuery()->getResult();
    }

    public function lastTotalReceivedAmount($cashReceivedId)
    {
        $query = $this->createQueryBuilder('cr');
        $query->select('cr.totalReceivedAmount');
        $query->andWhere('cr.id = :cashReceivedId');
        $query->setParameter('cashReceivedId', $cashReceivedId);
        
        return $query->getQuery()->getResult();
    }

    public function getAllCashReceiveGroupByDepo()
    {
        $query = $this->createQueryBuilder('cr');
        $query->join('cr.depo', 'd');
        $query->select('SUM(cr.amount) as total');
        $query->addSelect('d.name');
        $query->addSelect('d.id as depoId');
        $query->groupBy('cr.depo');

        return $query->getQuery()->getResult();
    }

    public function getCashDepositReceiveDetails($depoId)
    {
        $query = $this->createQueryBuilder('cr');
        $query->join('cr.depo', 'd');
        $query->select('d.name');
        $query->addSelect('d.id as depoId');
        $query->addSelect('cr.amount');
        $query->addSelect('cr.receivedAt');
        $query->where('cr.depo = :depo');
        $query->setParameter('depo', $depoId);

        return $query->getQuery()->getResult();
    }
}
